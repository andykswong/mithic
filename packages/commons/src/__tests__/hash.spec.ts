import { describe, expect, it } from '@jest/globals';
import { Hasher, sha256, sha512 } from '../hash.js';

const DATA = new Uint8Array([0, 1, 2, 3]);

describe('Hasher', () => {
  const hasher = new Hasher('test', 0x01, (input) => input);

  it('should digest data correctly', () => {
    const digest = hasher.digest(DATA);

    expect(digest.code).toBe(0x01);
    expect(digest.digest).toEqual(DATA);
  });
});

describe('sha256', () => {
  it('should have correct name, code and digest function', () => {
    expect(sha256.name).toBe('sha2-256');
    expect(sha256.code).toBe(0x12);
    expect(Uint8Array.from(sha256.digest(DATA).digest))
      .toEqual(new Uint8Array([0x05, 0x4e, 0xde, 0xc1, 0xd0, 0x21, 0x1f, 0x62, 0x4f, 0xed, 0x0c, 0xbc, 0xa9, 0xd4, 0xf9, 0x40, 0x0b, 0x0e, 0x49, 0x1c, 0x43, 0x74, 0x2a, 0xf2, 0xc5, 0xb0, 0xab, 0xeb, 0xf0, 0xc9, 0x90, 0xd8]));
  });
});

describe('sha512', () => {
  it('should have correct name, code and digest function', () => {
    expect(sha512.name).toBe('sha2-512');
    expect(sha512.code).toBe(0x13);
    expect(Uint8Array.from(sha512.digest(DATA).digest))
      .toEqual(new Uint8Array([0x4e, 0xc5, 0x4b, 0x09, 0xe2, 0xb2, 0x09, 0xdd, 0xb9, 0xa6, 0x78, 0x52, 0x2b, 0xb4, 0x51, 0x74, 0x0c, 0x51, 0x3f, 0x48, 0x8c, 0xb2, 0x7a, 0x08, 0x83, 0x63, 0x07, 0x18, 0x57, 0x17, 0x45, 0x14, 0x19, 0x20, 0x03, 0x6a, 0xeb, 0xdb, 0x78, 0xc0, 0xb4, 0xcd, 0x78, 0x3a, 0x4a, 0x6e, 0xec, 0xc9, 0x37, 0xa4, 0x0c, 0x61, 0x04, 0xe4, 0x27, 0x51, 0x2d, 0x70, 0x9a, 0x63, 0x4b, 0x41, 0x2f, 0x60]));
  });
});
